{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/page.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@nextui-org/react\";\nimport { Tooltip } from \"@nextui-org/react\";\nimport { ClockIcon, TrendingUpIcon } from \"@/components/icons\";\n\nimport { ActiveChips } from \"@/components/ActiveChips\";\nimport { TimerDisplay } from \"@/components/TimerDisplay\";\nimport { TimerControls } from \"@/components/TimerControls\";\nimport { CustomTimePopover } from \"@/components/CustomTimePopover\";\n\nexport default function Home() {\n  const [selectedTimer, setSelectedTimer] = useState<string>(\"medium\");\n  const [timerValue, setTimerValue] = useState<number>(25);\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const [customTime, setCustomTime] = useState<string>(\"\");\n  const [currentState, setCurrentState] = useState<string>(\"neutral\");\n  const [remainingTime, setRemainingTime] = useState<number>(timerValue * 60);\n  const [intervalId, setIntervalId] = useState<NodeJS.Timeout | null>(null);\n  const [breakDuration, setBreakDuration] = useState<number>(5); // Break duration in minutes\n\n  const [activeChips, setActiveChips] = useState([\n    // ... (activeChips array remains the same)\n  ]);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleSelectionChange = (keys: Set<string>) => {\n    const selectedKey = Array.from(keys)[0];\n    if (selectedKey !== \"custom\") {\n      setSelectedTimer(selectedKey);\n      let newTimerValue = 25;\n      switch (selectedKey) {\n        case \"extra-short\":\n          newTimerValue = 5;\n          break;\n        case \"short\":\n          newTimerValue = 15;\n          break;\n        case \"medium\":\n          newTimerValue = 25;\n          break;\n        case \"long\":\n          newTimerValue = 35;\n          break;\n        case \"extra-long\":\n          newTimerValue = 45;\n          break;\n        default:\n          newTimerValue = 25;\n      }\n      setTimerValue(newTimerValue);\n      setRemainingTime(newTimerValue * 60);\n      setCurrentState(\"neutral\");\n    }\n  };\n\n  const handleCustomSelect = (e: React.MouseEvent<HTMLLIElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsPopoverOpen(true);\n  };\n\n  const handleCustomTimeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCustomTime(e.target.value);\n  };\n\n  const handleCustomTimeSubmit = () => {\n    if (customTime) {\n      setSelectedTimer(`custom-${customTime}`);\n      const customValue = Number(customTime);\n      setTimerValue(customValue);\n      setRemainingTime(customValue * 60);\n      setIsPopoverOpen(false);\n      setCurrentState(\"neutral\");\n    }\n  };\n\n  const startTimer = () => {\n    setCurrentState(\"timer_running\");\n    const interval = setInterval(() => {\n      setRemainingTime((prevTime) => {\n        if (prevTime === 0) {\n          clearInterval(interval);\n          setCurrentState(\"timer_finished\");\n          setRemainingTime(breakDuration * 60); // Set remaining time to break duration\n          setActiveChips([]); // Clear reward modifiers when session is completed\n          return breakDuration * 60;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    setIntervalId(interval);\n  };\n\n  const startBreak = () => {\n    setCurrentState(\"break_running\");\n    const interval = setInterval(() => {\n      setRemainingTime((prevTime) => {\n        if (prevTime === 0) {\n          clearInterval(interval);\n          setCurrentState(\"neutral\");\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    setIntervalId(interval);\n  };\n\n  const resetTimer = () => {\n    if (intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n    setCurrentState(\"neutral\");\n    setRemainingTime(timerValue * 60);\n    setActiveChips([]); // Clear reward modifiers when session is ended early\n  };\n\n  useEffect(() => {\n    if (isPopoverOpen) {\n      inputRef.current?.focus();\n    }\n  }, [isPopoverOpen]);\n\n  useEffect(() => {\n    if (currentState === \"timer_finished\" || currentState === \"neutral\") {\n      if (intervalId) {\n        clearInterval(intervalId);\n        setIntervalId(null);\n      }\n    }\n  }, [currentState, intervalId]);\n\n  const formatTime = (time: number) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  return (\n    <section className=\"flex flex-col items-center justify-center gap-4 py-8 md:py-10\">\n      <div className=\"inline-block text-center justify-center\" style={{ width: '30%' }}>\n        <div className=\"relative z-10\">\n          <ActiveChips activeChips={activeChips} />\n\n          <br />\n\n          <TimerDisplay \n            remainingTime={remainingTime} \n            timerValue={timerValue} \n            currentState={currentState} \n            formatTime={formatTime} \n          />\n\n          <TimerControls\n            currentState={currentState}\n            startTimer={startTimer}\n            handleCustomSelect={handleCustomSelect}\n            handleSelectionChange={handleSelectionChange}\n            selectedTimer={selectedTimer}\n            activeChips={activeChips}\n            startBreak={startBreak}\n            resetTimer={resetTimer}\n            setCurrentState={setCurrentState}\n          />\n\n          <CustomTimePopover \n            isPopoverOpen={isPopoverOpen}\n            setIsPopoverOpen={setIsPopoverOpen}\n            customTime={customTime}\n            handleCustomTimeChange={handleCustomTimeChange}\n            handleCustomTimeSubmit={handleCustomTimeSubmit}\n            inputRef={inputRef}\n          />\n        </div>\n      </div> \n    </section>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}